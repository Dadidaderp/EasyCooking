-- MySQL Script generated by MySQL Workbench
-- Sun Mar  5 17:30:36 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema EasyCooking
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema EasyCooking
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `EasyCooking` DEFAULT CHARACTER SET utf8 ;
USE `EasyCooking` ;

-- -----------------------------------------------------
-- Table `EasyCooking`.`groupe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EasyCooking`.`groupe` ;

CREATE TABLE IF NOT EXISTS `EasyCooking`.`groupe` (
  `id` INT(50) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyCooking`.`utilisateur`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EasyCooking`.`utilisateur` ;

CREATE TABLE IF NOT EXISTS `EasyCooking`.`utilisateur` (
  `id` INT(50) NOT NULL AUTO_INCREMENT,
  `pseudo` VARCHAR(255) NULL,
  `password` VARCHAR(255) NULL,
  `nom` VARCHAR(255) NULL,
  `prenom` VARCHAR(255) NULL,
  `mail` VARCHAR(255) NULL,
  `fk_groupe_id` INT(50) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_utilisateur_groupe1_idx` (`fk_groupe_id` ASC),
  CONSTRAINT `fk_utilisateur_groupe1`
    FOREIGN KEY (`fk_groupe_id`)
    REFERENCES `EasyCooking`.`groupe` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyCooking`.`recette`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EasyCooking`.`recette` ;

CREATE TABLE IF NOT EXISTS `EasyCooking`.`recette` (
  `id` INT(50) NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(255) NULL,
  `description` TEXT NULL,
  `image` VARCHAR(255) NULL,
  `nbPersonne` INT(50) NULL,
  `status` INT(1) NULL,
  `fk_utilisateur_id` INT(50) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_recette_utilisateur1_idx` (`fk_utilisateur_id` ASC),
  CONSTRAINT `fk_recette_utilisateur1`
    FOREIGN KEY (`fk_utilisateur_id`)
    REFERENCES `EasyCooking`.`utilisateur` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyCooking`.`ingredient`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EasyCooking`.`ingredient` ;

CREATE TABLE IF NOT EXISTS `EasyCooking`.`ingredient` (
  `id` INT(50) NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyCooking`.`type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EasyCooking`.`type` ;

CREATE TABLE IF NOT EXISTS `EasyCooking`.`type` (
  `id` INT(50) NOT NULL,
  `nom` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyCooking`.`commentaire`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EasyCooking`.`commentaire` ;

CREATE TABLE IF NOT EXISTS `EasyCooking`.`commentaire` (
  `id` INT(50) NOT NULL AUTO_INCREMENT,
  `commentaire` TEXT NULL,
  `date` DATETIME NULL,
  `fk_utilisateur_id` INT(50) NOT NULL,
  `fk_recette_id` INT(50) NOT NULL,
  INDEX `fk_utilisateur_has_recette_recette1_idx` (`fk_recette_id` ASC),
  INDEX `fk_utilisateur_has_recette_utilisateur_idx` (`fk_utilisateur_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_utilisateur_has_recette_utilisateur`
    FOREIGN KEY (`fk_utilisateur_id`)
    REFERENCES `EasyCooking`.`utilisateur` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_utilisateur_has_recette_recette1`
    FOREIGN KEY (`fk_recette_id`)
    REFERENCES `EasyCooking`.`recette` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyCooking`.`recette_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EasyCooking`.`recette_type` ;

CREATE TABLE IF NOT EXISTS `EasyCooking`.`recette_type` (
  `fk_type_id` INT(50) NOT NULL,
  `fk_recette_id` INT(50) NOT NULL,
  PRIMARY KEY (`fk_type_id`, `fk_recette_id`),
  INDEX `fk_type_has_recette_recette1_idx` (`fk_recette_id` ASC),
  INDEX `fk_type_has_recette_type1_idx` (`fk_type_id` ASC),
  CONSTRAINT `fk_type_has_recette_type1`
    FOREIGN KEY (`fk_type_id`)
    REFERENCES `EasyCooking`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_type_has_recette_recette1`
    FOREIGN KEY (`fk_recette_id`)
    REFERENCES `EasyCooking`.`recette` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyCooking`.`recette_ingredient`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EasyCooking`.`recette_ingredient` ;

CREATE TABLE IF NOT EXISTS `EasyCooking`.`recette_ingredient` (
  `fk_recette_id` INT(50) NOT NULL,
  `fk_ingredient_id` INT(50) NOT NULL,
  `quantite` INT(50) NULL,
  `unite` VARCHAR(255) NULL,
  PRIMARY KEY (`fk_recette_id`, `fk_ingredient_id`),
  INDEX `fk_recette_has_ingredient_ingredient1_idx` (`fk_ingredient_id` ASC),
  INDEX `fk_recette_has_ingredient_recette1_idx` (`fk_recette_id` ASC),
  CONSTRAINT `fk_recette_has_ingredient_recette1`
    FOREIGN KEY (`fk_recette_id`)
    REFERENCES `EasyCooking`.`recette` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_recette_has_ingredient_ingredient1`
    FOREIGN KEY (`fk_ingredient_id`)
    REFERENCES `EasyCooking`.`ingredient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
